@using magero_store.Models
@model IEnumerable<Product>
@{
    ViewData["Title"] = "Products";
    Layout = "_Layout";
}

<!-- Hero Section -->
<div class="hero-section">
    <div class="container">
        <div class="text-center mb-5">
            <h1 class="hero-title">Explora Nuestra Colecci√≥n</h1>
            <p class="hero-subtitle">Descubre productos excepcionales seleccionados especialmente para ti</p>
        </div>
    </div>
</div>

<!-- Filters Section -->
<div class="filters-section">
    <div class="container">
        <div class="row g-3 align-items-center">
            <div class="col-md-4">
                <div class="filter-group">
                    <label for="categoryFilter" class="filter-label">Categor√≠a</label>
                    <select id="categoryFilter" class="form-select filter-select" onchange="filterByCategory()">
                        <option value="">Todas las categor√≠as</option>
                        <option value="electronics">Electr√≥nicos</option>
                        <option value="clothing">Ropa</option>
                        <option value="books">Libros</option>
                        <option value="appliances">Electrodom√©sticos</option>
                    </select>
                </div>
            </div>
            <div class="col-md-4">
                <div class="filter-group">
                    <label for="priceFilter" class="filter-label">Rango de Precio</label>
                    <select id="priceFilter" class="form-select filter-select">
                        <option value="">Todos los precios</option>
                        <option value="0-50">$0 - $50</option>
                        <option value="51-100">$51 - $100</option>
                        <option value="101-200">$101 - $200</option>
                        <option value="201+">$201+</option>
                    </select>
                </div>
            </div>
            <div class="col-md-4">
                <form asp-action="Search" asp-controller="Products" method="get" class="filter-group">
                    <label for="searchInput" class="filter-label">Buscar</label>
                    <div class="search-container">
                        <input type="text" id="searchInput" name="searchTerm" class="form-control search-input" 
                               placeholder="Buscar productos...">
                        <button class="search-btn" type="submit">
                            <i class="search-icon">üîç</i>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Products Grid -->
<div class="products-section">
    <div class="container">
        <div class="products-grid">
            @foreach (var product in Model)
            {
                <div class="product-card">
                    <div class="product-image-container">
                        <img src="@product.ImageUrl" class="product-image" alt="@product.Name" 
                             onerror="this.src='/images/placeholder-product.jpg'" />
                        <div class="product-badge">Nuevo</div>
                    </div>
                    <div class="product-content">
                        <h3 class="product-title">@product.Name</h3>
                        <p class="product-description">@product.Description</p>
                        <div class="product-price-section">
                            <span class="product-price">$@product.Price.ToString("0.00")</span>
                        </div>
                        <div class="product-actions">
                            <form asp-action="AddToCart" asp-controller="Cart" method="post" class="add-to-cart-form">
                                <input type="hidden" name="productId" value="@product.Id" />
                                <div class="quantity-selector">
                                    <label for="quantity-@product.Id" class="quantity-label">Cantidad:</label>
                                    <select name="quantity" id="quantity-@product.Id" class="quantity-select">
                                        @for (int i = 1; i <= 10; i++)
                                        {
                                            <option value="@i">@i</option>
                                        }
                                    </select>
                                </div>
                                <button type="submit" class="btn-add-to-cart">
                                    <span class="btn-text">Agregar al Carrito</span>
                                </button>
                            </form>
                            <a href="@Url.Action("Details", "Products", new { id = product.Id })" 
                               class="btn-view-details">Ver Detalles</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Filter functionality
        function filterByCategory() {
            var category = document.getElementById('categoryFilter').value;
            var priceRange = document.getElementById('priceFilter').value;
            
            var url = '/Products/Index';
            var params = [];
            
            if (category) params.push('category=' + encodeURIComponent(category));
            if (priceRange) params.push('priceRange=' + encodeURIComponent(priceRange));
            
            if (params.length > 0) {
                url += '?' + params.join('&');
            }
            
            window.location.href = url;
        }

        // Price filter change handler
        document.getElementById('priceFilter').addEventListener('change', filterByCategory);

        // Enhanced product interactions
        document.addEventListener('DOMContentLoaded', function() {
            // Add hover effects for product cards
            const productCards = document.querySelectorAll('.product-card');
            productCards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-8px)';
                });
                
                card.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0)';
                });
            });

            // Add to cart animation
            const addToCartButtons = document.querySelectorAll('.btn-add-to-cart');
            addToCartButtons.forEach(button => {
                button.addEventListener('click', function(e) {
                    // Add loading state
                    this.classList.add('loading');
                    this.innerHTML = '<span class="btn-text">Agregando...</span>';
                    
                    // Reset after form submission
                    setTimeout(() => {
                        this.classList.remove('loading');
                        this.innerHTML = '<span class="btn-text">Agregar al Carrito</span>';
                    }, 2000);
                });
            });

            // Search input enhancement
            const searchInput = document.getElementById('searchInput');
            searchInput.addEventListener('input', function() {
                if (this.value.length > 2) {
                    // Could implement live search here
                    this.classList.add('has-value');
                } else {
                    this.classList.remove('has-value');
                }
            });
        });
    </script>
}